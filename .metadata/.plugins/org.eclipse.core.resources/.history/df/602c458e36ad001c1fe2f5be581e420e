package LinkedList2;

import java.util.Scanner;

import LinkedList1.Node;

public class InsertNodeRecursively {

    public static Node<Integer> input() {
    	
    	Scanner sc = new Scanner(System.in);
    	int n = sc.nextInt();
    	
    	Node<Integer> head = null;
    	Node<Integer> tail = null;
    	
    	while( n!= -1) {
    		
    	  Node<Integer> contain = new Node<>(n);
    	  
    	  if( head == null) {
    		  
    		  head = contain;
    		  tail = contain;
    	  }
    	  else {
    		  
    		  tail.next = contain;
    		  tail = tail.next;
    	  }
    		n = sc.nextInt();
    	}
             return head;
    }
	
    public static void insertRecursive( Node<Integer> head  ) {
    	
    	 Scanner sc = new Scanner(System.in);
    	    
    	    int index = sc.nextInt();
    	    int insert = sc.nextInt();
    	
    	    Node<Integer> newNode = new Node<>(insert);
    	
    	int count = 0 ;
    	
    	if( head == null) {
    		
    		return;
      }
           while( head != null ) {
        	   
        	   if( count < (index - 1)) {
        		   
        		   newNode.next = head.next;
        		   head.next = newNode;
        		   
        		   System.out.println(newNode);
        		   
        	   }
           
                  
        	   System.out.println(head.data);
               count += 1;  
        	   insertRecursive(head.next);
           
           }
           
           
    }
    
    public static void main(String[] args) {

    Node<Integer> head = input();
    
   
    
    insertRecursive(head, index, insert);
    
    

	}

}
