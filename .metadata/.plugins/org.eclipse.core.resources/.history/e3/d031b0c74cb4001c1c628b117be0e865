package Queues;

public class QueuesUsingArray {
	
    private int data[];
    
    private int front;
    
    private int rear;
    
    private int size;
    
    public QueuesUsingArray() {
    	
    	data = new int[10];
        
    	front = 0;
    	
    	rear = -1;
    }   

     public void enqueue( int elem ) {
    	 
    	 rear+= 1;
    	 
    	 data[front] = elem;
    	 
    	 data[rear] = elem;
    	 
     }   

     public int size() {
    	 
    	 return rear + 1;
     }
     
     public int dequeue() throws QueuesEmptyException {
    	
    	 if( rear == -1 ) {
    		 
    		 QueuesEmptyException e = new QueuesEmptyException();
    		 
    		 throw e;
    	 }
    	 
    	 front+= 1;
    	 
    	 rear-= 1;
    	
    	return data[front - 1];
    	
     }

   public int front() {
	   
	   return data[front];
   }

     public boolean isEmpty() {
    	 
    	 if( rear == -1 ) {
    		 
    		 return true;
    	 }
     
    	 else {
    		 
    		  return false; 
    	 }  
     }
}
